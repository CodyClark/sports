// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: sports.proto

package gokvm

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Abbreviation string `protobuf:"bytes,3,opt,name=abbreviation,proto3" json:"abbreviation,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sports_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_sports_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_sports_proto_rawDescGZIP(), []int{0}
}

func (x *Team) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetAbbreviation() string {
	if x != nil {
		return x.Abbreviation
	}
	return ""
}

type GameScoreboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Score     int32  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	HomeTeam  *Team  `protobuf:"bytes,3,opt,name=home_team,json=homeTeam,proto3" json:"home_team,omitempty"`
	AwayTeam  *Team  `protobuf:"bytes,4,opt,name=away_team,json=awayTeam,proto3" json:"away_team,omitempty"`
	StartTime string `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Date      string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GameScoreboard) Reset() {
	*x = GameScoreboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sports_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameScoreboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameScoreboard) ProtoMessage() {}

func (x *GameScoreboard) ProtoReflect() protoreflect.Message {
	mi := &file_sports_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameScoreboard.ProtoReflect.Descriptor instead.
func (*GameScoreboard) Descriptor() ([]byte, []int) {
	return file_sports_proto_rawDescGZIP(), []int{1}
}

func (x *GameScoreboard) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameScoreboard) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GameScoreboard) GetHomeTeam() *Team {
	if x != nil {
		return x.HomeTeam
	}
	return nil
}

func (x *GameScoreboard) GetAwayTeam() *Team {
	if x != nil {
		return x.AwayTeam
	}
	return nil
}

func (x *GameScoreboard) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GameScoreboard) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetTeamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTeamsRequest) Reset() {
	*x = GetTeamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sports_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsRequest) ProtoMessage() {}

func (x *GetTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sports_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsRequest.ProtoReflect.Descriptor instead.
func (*GetTeamsRequest) Descriptor() ([]byte, []int) {
	return file_sports_proto_rawDescGZIP(), []int{2}
}

type GetTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams []*Team `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
}

func (x *GetTeamsResponse) Reset() {
	*x = GetTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sports_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsResponse) ProtoMessage() {}

func (x *GetTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sports_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsResponse.ProtoReflect.Descriptor instead.
func (*GetTeamsResponse) Descriptor() ([]byte, []int) {
	return file_sports_proto_rawDescGZIP(), []int{3}
}

func (x *GetTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

type GetTeamByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTeamByNameRequest) Reset() {
	*x = GetTeamByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sports_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamByNameRequest) ProtoMessage() {}

func (x *GetTeamByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sports_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamByNameRequest.ProtoReflect.Descriptor instead.
func (*GetTeamByNameRequest) Descriptor() ([]byte, []int) {
	return file_sports_proto_rawDescGZIP(), []int{4}
}

func (x *GetTeamByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTeamByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team *Team `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
}

func (x *GetTeamByNameResponse) Reset() {
	*x = GetTeamByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sports_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamByNameResponse) ProtoMessage() {}

func (x *GetTeamByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sports_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamByNameResponse.ProtoReflect.Descriptor instead.
func (*GetTeamByNameResponse) Descriptor() ([]byte, []int) {
	return file_sports_proto_rawDescGZIP(), []int{5}
}

func (x *GetTeamByNameResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type GetGameScoreboardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetGameScoreboardsRequest) Reset() {
	*x = GetGameScoreboardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sports_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameScoreboardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameScoreboardsRequest) ProtoMessage() {}

func (x *GetGameScoreboardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sports_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameScoreboardsRequest.ProtoReflect.Descriptor instead.
func (*GetGameScoreboardsRequest) Descriptor() ([]byte, []int) {
	return file_sports_proto_rawDescGZIP(), []int{6}
}

func (x *GetGameScoreboardsRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetGameScoreboardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scoreboards []*GameScoreboard `protobuf:"bytes,1,rep,name=scoreboards,proto3" json:"scoreboards,omitempty"`
}

func (x *GetGameScoreboardsResponse) Reset() {
	*x = GetGameScoreboardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sports_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameScoreboardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameScoreboardsResponse) ProtoMessage() {}

func (x *GetGameScoreboardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sports_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameScoreboardsResponse.ProtoReflect.Descriptor instead.
func (*GetGameScoreboardsResponse) Descriptor() ([]byte, []int) {
	return file_sports_proto_rawDescGZIP(), []int{7}
}

func (x *GetGameScoreboardsResponse) GetScoreboards() []*GameScoreboard {
	if x != nil {
		return x.Scoreboards
	}
	return nil
}

var File_sports_proto protoreflect.FileDescriptor

var file_sports_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x67, 0x6f, 0x6b, 0x76, 0x6d, 0x22, 0x4e, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbd, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x28,
	0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x67, 0x6f, 0x6b, 0x76, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x08,
	0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x79,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67, 0x6f,
	0x6b, 0x76, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67, 0x6f,
	0x6b, 0x76, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x22,
	0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67, 0x6f, 0x6b, 0x76, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x04, 0x74, 0x65, 0x61, 0x6d, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x55, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6b, 0x76,
	0x6d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x32, 0xe9, 0x01,
	0x0a, 0x03, 0x4e, 0x68, 0x6c, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6b, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6b, 0x76,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x6b, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6b, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x6b, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x6b, 0x76, 0x6d, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sports_proto_rawDescOnce sync.Once
	file_sports_proto_rawDescData = file_sports_proto_rawDesc
)

func file_sports_proto_rawDescGZIP() []byte {
	file_sports_proto_rawDescOnce.Do(func() {
		file_sports_proto_rawDescData = protoimpl.X.CompressGZIP(file_sports_proto_rawDescData)
	})
	return file_sports_proto_rawDescData
}

var file_sports_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_sports_proto_goTypes = []interface{}{
	(*Team)(nil),                       // 0: gokvm.Team
	(*GameScoreboard)(nil),             // 1: gokvm.GameScoreboard
	(*GetTeamsRequest)(nil),            // 2: gokvm.GetTeamsRequest
	(*GetTeamsResponse)(nil),           // 3: gokvm.GetTeamsResponse
	(*GetTeamByNameRequest)(nil),       // 4: gokvm.GetTeamByNameRequest
	(*GetTeamByNameResponse)(nil),      // 5: gokvm.GetTeamByNameResponse
	(*GetGameScoreboardsRequest)(nil),  // 6: gokvm.GetGameScoreboardsRequest
	(*GetGameScoreboardsResponse)(nil), // 7: gokvm.GetGameScoreboardsResponse
}
var file_sports_proto_depIdxs = []int32{
	0, // 0: gokvm.GameScoreboard.home_team:type_name -> gokvm.Team
	0, // 1: gokvm.GameScoreboard.away_team:type_name -> gokvm.Team
	0, // 2: gokvm.GetTeamsResponse.teams:type_name -> gokvm.Team
	0, // 3: gokvm.GetTeamByNameResponse.team:type_name -> gokvm.Team
	1, // 4: gokvm.GetGameScoreboardsResponse.scoreboards:type_name -> gokvm.GameScoreboard
	2, // 5: gokvm.Nhl.GetTeams:input_type -> gokvm.GetTeamsRequest
	4, // 6: gokvm.Nhl.GetTeamByName:input_type -> gokvm.GetTeamByNameRequest
	6, // 7: gokvm.Nhl.GetGameScoreboards:input_type -> gokvm.GetGameScoreboardsRequest
	3, // 8: gokvm.Nhl.GetTeams:output_type -> gokvm.GetTeamsResponse
	5, // 9: gokvm.Nhl.GetTeamByName:output_type -> gokvm.GetTeamByNameResponse
	7, // 10: gokvm.Nhl.GetGameScoreboards:output_type -> gokvm.GetGameScoreboardsResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_sports_proto_init() }
func file_sports_proto_init() {
	if File_sports_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sports_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sports_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameScoreboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sports_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sports_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sports_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sports_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sports_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameScoreboardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sports_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameScoreboardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sports_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sports_proto_goTypes,
		DependencyIndexes: file_sports_proto_depIdxs,
		MessageInfos:      file_sports_proto_msgTypes,
	}.Build()
	File_sports_proto = out.File
	file_sports_proto_rawDesc = nil
	file_sports_proto_goTypes = nil
	file_sports_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NhlClient is the client API for Nhl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NhlClient interface {
	GetTeams(ctx context.Context, in *GetTeamsRequest, opts ...grpc.CallOption) (*GetTeamsResponse, error)
	GetTeamByName(ctx context.Context, in *GetTeamByNameRequest, opts ...grpc.CallOption) (*GetTeamByNameResponse, error)
	GetGameScoreboards(ctx context.Context, in *GetGameScoreboardsRequest, opts ...grpc.CallOption) (*GetGameScoreboardsResponse, error)
}

type nhlClient struct {
	cc grpc.ClientConnInterface
}

func NewNhlClient(cc grpc.ClientConnInterface) NhlClient {
	return &nhlClient{cc}
}

func (c *nhlClient) GetTeams(ctx context.Context, in *GetTeamsRequest, opts ...grpc.CallOption) (*GetTeamsResponse, error) {
	out := new(GetTeamsResponse)
	err := c.cc.Invoke(ctx, "/gokvm.Nhl/GetTeams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nhlClient) GetTeamByName(ctx context.Context, in *GetTeamByNameRequest, opts ...grpc.CallOption) (*GetTeamByNameResponse, error) {
	out := new(GetTeamByNameResponse)
	err := c.cc.Invoke(ctx, "/gokvm.Nhl/GetTeamByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nhlClient) GetGameScoreboards(ctx context.Context, in *GetGameScoreboardsRequest, opts ...grpc.CallOption) (*GetGameScoreboardsResponse, error) {
	out := new(GetGameScoreboardsResponse)
	err := c.cc.Invoke(ctx, "/gokvm.Nhl/GetGameScoreboards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NhlServer is the server API for Nhl service.
type NhlServer interface {
	GetTeams(context.Context, *GetTeamsRequest) (*GetTeamsResponse, error)
	GetTeamByName(context.Context, *GetTeamByNameRequest) (*GetTeamByNameResponse, error)
	GetGameScoreboards(context.Context, *GetGameScoreboardsRequest) (*GetGameScoreboardsResponse, error)
}

// UnimplementedNhlServer can be embedded to have forward compatible implementations.
type UnimplementedNhlServer struct {
}

func (*UnimplementedNhlServer) GetTeams(context.Context, *GetTeamsRequest) (*GetTeamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeams not implemented")
}
func (*UnimplementedNhlServer) GetTeamByName(context.Context, *GetTeamByNameRequest) (*GetTeamByNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeamByName not implemented")
}
func (*UnimplementedNhlServer) GetGameScoreboards(context.Context, *GetGameScoreboardsRequest) (*GetGameScoreboardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGameScoreboards not implemented")
}

func RegisterNhlServer(s *grpc.Server, srv NhlServer) {
	s.RegisterService(&_Nhl_serviceDesc, srv)
}

func _Nhl_GetTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NhlServer).GetTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gokvm.Nhl/GetTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NhlServer).GetTeams(ctx, req.(*GetTeamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nhl_GetTeamByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NhlServer).GetTeamByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gokvm.Nhl/GetTeamByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NhlServer).GetTeamByName(ctx, req.(*GetTeamByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Nhl_GetGameScoreboards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGameScoreboardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NhlServer).GetGameScoreboards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gokvm.Nhl/GetGameScoreboards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NhlServer).GetGameScoreboards(ctx, req.(*GetGameScoreboardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Nhl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gokvm.Nhl",
	HandlerType: (*NhlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTeams",
			Handler:    _Nhl_GetTeams_Handler,
		},
		{
			MethodName: "GetTeamByName",
			Handler:    _Nhl_GetTeamByName_Handler,
		},
		{
			MethodName: "GetGameScoreboards",
			Handler:    _Nhl_GetGameScoreboards_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sports.proto",
}
