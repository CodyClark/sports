#!/bin/bash
# This is an experimental build script for cross-compiling inside of docker.
# Thus far, the results have been weird
set -euo pipefail

if uname -a | grep raspberry &> /dev/null; then
  echo "Wrong script! Run script/build.local on a Pi"
  exit 1
fi

ROOT=$(git rev-parse --show-toplevel)
cd "${ROOT}"
IN_DOCKER="${IN_DOCKER:-no}"
SRC="/src"
SUFFIX="armv6l"
pibuilder="pibuilder"

if [ "${IN_DOCKER}" = "no" ]; then
  if ! uname -a | grep raspberry &> /dev/null; then
    # Run pkger when static assets change
    #pkger -o ./cmd/sportsmatrix
    if ! docker images | grep ${pibuilder} &> /dev/null; then
      docker buildx build -f Dockerfile.${pibuilder} -t ${pibuilder} .
    fi

    set -x
    exec docker run -t --rm \
      -e IN_DOCKER=yes \
      -v "${ROOT}":/src \
      -w /src \
      ${pibuilder} \
      /src/script/$(basename $0)
  fi
fi

ROOT="$(dirname $( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd ))"

export CGO_ENABLED=1
export GOCACHE=${ROOT}/.cache
export GOOS=linux
export GOARCH=arm
export GOARM=6
export CC=arm-linux-gnueabi-gcc
export CXX=arm-linux-gnueabi-g++

set -x

if [ ! -d "${ROOT}/pkg/rgbmatrix-rpi/lib/rpi-rgb-led-matrix" ]; then
  cp -r "${ROOT}/pkg/rgbmatrix-rpi/lib/rpi-rgb-led-matrix.BASE" "${ROOT}/pkg/rgbmatrix-rpi/lib/rpi-rgb-led-matrix"
fi

if [ ! -f "${ROOT}/pkg/rgbmatrix-rpi/lib/rpi-rgb-led-matrix/lib/librgbmatrix.so.1" ]; then
  cd "${ROOT}/pkg/rgbmatrix-rpi/lib/rpi-rgb-led-matrix"
  make
fi

cd "${ROOT}"
go build -mod=vendor -o sportsmatrix.${SUFFIX}  ./cmd/sportsmatrix
